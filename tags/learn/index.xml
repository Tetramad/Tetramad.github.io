<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Learn on /dev/log</title>
    <link>/tags/learn/</link>
    <description>Recent content in Learn on /dev/log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 06 Aug 2020 13:59:14 +0900</lastBuildDate>
    
        <atom:link href="/tags/learn/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>어셈블리어 정리</title>
      <link>/article/assembly/%EC%96%B4%EC%85%88%EB%B8%94%EB%A6%AC%EC%96%B4-%EC%A0%95%EB%A6%AC/</link>
      <pubDate>Thu, 06 Aug 2020 13:59:14 +0900</pubDate>
      
      <guid>/article/assembly/%EC%96%B4%EC%85%88%EB%B8%94%EB%A6%AC%EC%96%B4-%EC%A0%95%EB%A6%AC/</guid>
      <description>어셈블리어란 무엇인가? 어셈블리어(assembly language) 또는 어셈블러 언어(assembler language)는 기계어와 일대일 대응이 되는 컴퓨터 프</description>
      
    </item>
    
    <item>
      <title>Day2: chrome extension으로 사용자가 보고있는 페이지 수정하기</title>
      <link>/article/chrome-extension/page-read-write/</link>
      <pubDate>Thu, 06 Aug 2020 13:39:59 +0900</pubDate>
      
      <guid>/article/chrome-extension/page-read-write/</guid>
      <description>사용자가 보고 있는 페이지 접근하기 사용자가 보고 있는 페이지에 접근하려면 chrome.tabs.execute... API를 이용하거나 manifest.json 파일의 &amp;quot;content_scripts&amp;quot; 부분을 이용해야한다. 사용자가 보고 있는 페이지 접근</description>
      
    </item>
    
    <item>
      <title>Day1: chrome extension에 key-value 저장하기</title>
      <link>/article/chrome-extension/key-value_stroage/</link>
      <pubDate>Fri, 03 Jul 2020 13:50:14 +0900</pubDate>
      
      <guid>/article/chrome-extension/key-value_stroage/</guid>
      <description>manifest.json 작성하기 이 확장 프로그램이 어떤 프로그램인지 어떤 일을 할 수 있는 지를 명시하는 파일이다. 페이지 수정 등의 접근 권한도 이 파일에서 적힌 내용만 허용하기 때문에 잘</description>
      
    </item>
    
    <item>
      <title>Lua 학습 7일차</title>
      <link>/article/lua/lua-%ED%95%99%EC%8A%B5-7%EC%9D%BC%EC%B0%A8/</link>
      <pubDate>Wed, 20 May 2020 21:01:59 +0900</pubDate>
      
      <guid>/article/lua/lua-%ED%95%99%EC%8A%B5-7%EC%9D%BC%EC%B0%A8/</guid>
      <description>Extending Lua Lua에서 C로 작성된 기능을 사용하는 방법을 배웠다. 두 가지 방법을 사용해 보았다. C에서 Lua API를 통해 Lua Instance로 C Function 사용 Lua에서 Lua A</description>
      
    </item>
    
    <item>
      <title>Lua 학습 6일차</title>
      <link>/article/lua/lua-%ED%95%99%EC%8A%B5-6%EC%9D%BC%EC%B0%A8/</link>
      <pubDate>Tue, 19 May 2020 15:47:36 +0900</pubDate>
      
      <guid>/article/lua/lua-%ED%95%99%EC%8A%B5-6%EC%9D%BC%EC%B0%A8/</guid>
      <description>Embedding Lua 오늘은 Lua를 C언어로 작성된 프로그램에서 사용하는 방법을 공부했다. 그 중 설정 파일은 Lua로 작성하는 것을 실습해보았다. 지금부터는 강의 자료보다 매</description>
      
    </item>
    
    <item>
      <title>Lua 학습 5일차</title>
      <link>/article/lua/lua-%ED%95%99%EC%8A%B5-5%EC%9D%BC%EC%B0%A8/</link>
      <pubDate>Mon, 18 May 2020 15:24:31 +0900</pubDate>
      
      <guid>/article/lua/lua-%ED%95%99%EC%8A%B5-5%EC%9D%BC%EC%B0%A8/</guid>
      <description>C API Basic 환경 설정 현재 사용 중인 환경 OS WSL Ubuntu 20.04LTS Package Manager apt 2.0.2 (amd64) C Compiler gcc (Ubuntu 9.3.0-10ubuntu2) 9.3.0 Lua Lua 5.3.3 설치한 패키지 apt install gcc lua5.3 liblua5.3-dev gcc/focal,now 4:9.3.0-1ubuntu2 amd64 [installed] C 컴파일러 lua5.3/focal,now 5.3.3-1.1ubuntu2 amd64 [installed] Lua 컴파일러와 REPL liblua5.3-dev/focal,now 5.3.3-1.1ubuntu2 amd64 [installed] Lua 라</description>
      
    </item>
    
    <item>
      <title>Lua 학습 4일차</title>
      <link>/article/lua/lua-%ED%95%99%EC%8A%B5-4%EC%9D%BC%EC%B0%A8/</link>
      <pubDate>Fri, 15 May 2020 16:03:13 +0900</pubDate>
      
      <guid>/article/lua/lua-%ED%95%99%EC%8A%B5-4%EC%9D%BC%EC%B0%A8/</guid>
      <description>Module Lua에서는 여러 모듈로 나누어 프로그램을 관리한다. 모듈을 파일로 존재한다. 사용을 위해 불러오면 하나의 table로 관리된다. 파일은 각각 chunk를</description>
      
    </item>
    
    <item>
      <title>Lua 학습 3일차</title>
      <link>/article/lua/lua-%ED%95%99%EC%8A%B5-3%EC%9D%BC%EC%B0%A8/</link>
      <pubDate>Thu, 14 May 2020 11:19:02 +0900</pubDate>
      
      <guid>/article/lua/lua-%ED%95%99%EC%8A%B5-3%EC%9D%BC%EC%B0%A8/</guid>
      <description>Iterator Lua에서는 3가지 iterator를 사용할 수 있다. 각각 closure iterator, stateless iterator, seedless iterator라 부른다. 우선 iterator가 되기 위한 조건 두 가지. 값을 반</description>
      
    </item>
    
    <item>
      <title>Lua 학습 2일차</title>
      <link>/article/lua/lua-%ED%95%99%EC%8A%B5-2%EC%9D%BC%EC%B0%A8/</link>
      <pubDate>Wed, 13 May 2020 17:00:43 +0900</pubDate>
      
      <guid>/article/lua/lua-%ED%95%99%EC%8A%B5-2%EC%9D%BC%EC%B0%A8/</guid>
      <description>function function과 variable이 같은 namespace를 사용한다. shadowing도 가능하니 이 점을 주의해야한다. function max(a, b) return (a &amp;gt; b) and a or</description>
      
    </item>
    
    <item>
      <title>Lua 학습 1일차</title>
      <link>/article/lua/lua-%ED%95%99%EC%8A%B5-1%EC%9D%BC%EC%B0%A8/</link>
      <pubDate>Tue, 12 May 2020 18:36:45 +0900</pubDate>
      
      <guid>/article/lua/lua-%ED%95%99%EC%8A%B5-1%EC%9D%BC%EC%B0%A8/</guid>
      <description>논리 값 true, false와 논리 연산자 and, or not false와 nil을 제외한 모든 값은 true로 취급한다. 따라서 C랑 다르게, JavaScript랑 다르게, 0</description>
      
    </item>
    
  </channel>
</rss>
