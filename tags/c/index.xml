<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>C on dev/log</title>
    <link>/tags/c/</link>
    <description>Recent content in C on dev/log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 23 Apr 2020 00:00:00 +0900</lastBuildDate>
    
        <atom:link href="/tags/c/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C와 &amp;lt;stdbool.h&amp;gt;</title>
      <link>/til/c%EC%99%80-stdbool.h/</link>
      <pubDate>Thu, 23 Apr 2020 00:00:00 +0900</pubDate>
      
      <guid>/til/c%EC%99%80-stdbool.h/</guid>
      <description>&amp;lt;stdbool.h&amp;gt;이란 &amp;lt;stdbool.h&amp;gt;은 C99버전을 기준으로 표준이 된 헤더 파일이다. 이는 C99 버전부터 _Bool</description>
      
    </item>
    
    <item>
      <title>C99 _Bool Type</title>
      <link>/til/c99-_bool-type/</link>
      <pubDate>Sat, 18 Apr 2020 00:00:00 +0900</pubDate>
      
      <guid>/til/c99-_bool-type/</guid>
      <description>_Bool형은 부호가 없는 정수형(unsigned integer type)이다. 랭크(rank)가 가장 낮다. 0과 1만을 저장할 수 있다. 0이 아닌 값을 저장할 경우</description>
      
    </item>
    
    <item>
      <title>C float increment/decrement operator</title>
      <link>/til/c-float-increment-decrement-operator/</link>
      <pubDate>Fri, 17 Apr 2020 00:00:00 +0900</pubDate>
      
      <guid>/til/c-float-increment-decrement-operator/</guid>
      <description>float형과 double형에도 사용할 수 있다. ++연산자는 += 1 같은 효과를 내고, --연산자는 -= 1 같은 효과를 낸다. &#39;postfix&#39;와 &#39;pref</description>
      
    </item>
    
    <item>
      <title>ISO646 Trigraphs와 Digraphs</title>
      <link>/til/iso646-trigraphs%EC%99%80-digraphs/</link>
      <pubDate>Sun, 12 Apr 2020 00:00:00 +0900</pubDate>
      
      <guid>/til/iso646-trigraphs%EC%99%80-digraphs/</guid>
      <description>C는 8비트 인코딩을 사용한다. ASCII를 사용하는 것이 표준을 정해진 것이 아니다. 이 정의 때문에 대표적으로 문제가 되었던 것이 ISO 646 인코딩이다. 표준를 만들</description>
      
    </item>
    
    <item>
      <title>C 함수 반환값에 대한 생각</title>
      <link>/til/c-%ED%95%A8%EC%88%98-%EB%B0%98%ED%99%98%EA%B0%92%EC%97%90-%EB%8C%80%ED%95%9C-%EC%83%9D%EA%B0%81/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0900</pubDate>
      
      <guid>/til/c-%ED%95%A8%EC%88%98-%EB%B0%98%ED%99%98%EA%B0%92%EC%97%90-%EB%8C%80%ED%95%9C-%EC%83%9D%EA%B0%81/</guid>
      <description>C언어의 반환값 주로 사용되는 반환값 종류 결과 오류코드 이 두 가지 중 우선순위를 두자면 오류코드를 우선적으로 반환해야 한다. 아래 두 예시를 보며 그 이유를 느낄 수 있</description>
      
    </item>
    
  </channel>
</rss>
